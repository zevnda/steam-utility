name: Build release

on:
  workflow_dispatch:
    inputs:
        version:
          description: 'New Version'
          required: true

run-name: Build release v${{ github.event.inputs.version }}

permissions:
  contents: write
  
jobs:
  fetch_previous_version:
      runs-on: ubuntu-latest
      outputs:
        previous_version: ${{ steps.get_version.outputs.previous_version }}
      steps:
        - name: Get latest release version
          id: get_version
          run: |
            PREVIOUS_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest | jq -r .tag_name)
            echo "Found previous version: $PREVIOUS_VERSION"
            echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT

  build_release_bundle:
    runs-on: windows-latest
    needs: fetch_previous_version
    timeout-minutes: 5
    steps:
        - name: Set up MSBuild
          uses: microsoft/setup-msbuild@v2

        - name: Checkout repository
          uses: actions/checkout@v4

        - name: Update versions
          run: |
            $assemblyInfo = Get-Content Properties/AssemblyInfo.cs
            $updatedAssemblyInfo = $assemblyInfo -replace "${{ needs.fetch_previous_version.outputs.previous_version }}", "${{ github.event.inputs.version }}"
            $updatedAssemblyInfo | Set-Content Properties/AssemblyInfo.cs
            $program = Get-Content Program.cs
            $updatedProgram = $program -replace "${{ needs.fetch_previous_version.outputs.previous_version }}", "${{ github.event.inputs.version }}"
            $updatedProgram | Set-Content Program.cs

        - name: Build library files
          run: MSBuild.exe .\SteamUtility.csproj
          shell: pwsh

        - name: Create zip file
          run: |
            $outputPath = "..\src-tauri\libs\"
            $zipPath = "SteamUtility_${{ github.event.inputs.version }}.zip"
            Compress-Archive -Path "$outputPath\*.exe" -DestinationPath $zipPath
            Compress-Archive -Path ".\icon.ico" -Update $zipPath
            Compress-Archive -Path ".\libs\*" -Update $zipPath
            Compress-Archive -Path ".\LICENSE" -Update $zipPath
          shell: pwsh

        - name: Commit changes
          run: |
            git config --local user.name "github-actions[bot]"
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git add Properties/AssemblyInfo.cs Program.cs
            git commit -m "Bump version to ${{ github.event.inputs.version }}"
            git push

        - name: Create release
          uses: softprops/action-gh-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            tag_name: ${{ github.event.inputs.version }}
            name: SteamUtility v${{ github.event.inputs.version }}
            files: SteamUtility_${{ github.event.inputs.version }}.zip
